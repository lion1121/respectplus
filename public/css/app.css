@-webkit-keyframes menu_underline {
  from {
    width: 0;
  }

  to {
    width: 100%;
  }
}

@keyframes menu_underline {
  from {
    width: 0;
  }

  to {
    width: 100%;
  }
}

@-webkit-keyframes height_vertical {
  from {
    height: 0;
  }

  to {
    height: 100%;
  }
}

@keyframes height_vertical {
  from {
    height: 0;
  }

  to {
    height: 100%;
  }
}

@-webkit-keyframes pulsar {
  from {
    color: #333333;
  }

  to {
    color: #D84949;
  }
}

@keyframes pulsar {
  from {
    color: #333333;
  }

  to {
    color: #D84949;
  }
}

.main_header_wrapper {
  z-index: 2;
}

.main_header_wrapper .top_menu_wrapper {
  background: #111111;
}

.main_header_wrapper .social_item {
  border-left: 2px solid #222222;
  font-size: 16px;
  padding: 10px;
  text-align: center;
  margin: 0;
}

.main_header_wrapper .social_item a {
  color: #aaaaaa;
  -webkit-transition: all 1s ease;
  transition: all 1s ease;
}

.main_header_wrapper .social_item a:link {
  text-decoration: none;
  color: #aaaaaa;
}

.main_header_wrapper .social_item a:visited {
  text-decoration: none;
  color: #aaaaaa;
}

.main_header_wrapper .social_item a:hover {
  color: #fff;
}

.main_header_wrapper .social_item:last-child {
  border-right: 2px solid #222222;
}

.social_item_list {
  margin: 0;
}

.header_phone_block {
  font-weight: 700;
  font-size: 14px;
  color: #aaaaaa;
}

.menu_wrapper {
  background-color: #fff;
  z-index: 2;
  -webkit-box-shadow: 0 0 8px rgba(0, 0, 0, 0.5);
          box-shadow: 0 0 8px rgba(0, 0, 0, 0.5);
}

.header_logo_box {
  position: absolute;
  padding: 0;
  top: 0;
  z-index: 999;
  width: 245px;
  height: 120px;
  background: #d84949;
}

.header_logo_box img {
  margin: 17px 0 0 20px;
}

.header_logo_box .real_estate_name,
.header_logo_box .real_estate {
  color: #fff;
}

.header_logo_box .real_estate_name:link,
.header_logo_box .real_estate:link {
  text-decoration: none;
  color: #fff;
}

.header_logo_box .real_estate_name:visited,
.header_logo_box .real_estate:visited {
  text-decoration: none;
  color: #fff;
}

.header_logo_box span {
  font-weight: 300;
}

.header_logo_box h1 {
  color: #fff;
  margin: -7px 0 0 21px;
}

.header_logo_box h2 {
  margin: -18px 0 0 23px;
}

.header_logo_box .real_estate_name {
  font-size: 36px;
}

.header_logo_box .real_estate {
  font-size: 18px;
}

.main_nav {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap;
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  height: 76px;
  margin: 0;
  font-size: 0;
}

.main_nav .menu_link {
  text-transform: uppercase;
  color: #2b2b2b;
  font-weight: 700;
  font-size: 15px;
  position: relative;
}

.main_nav .menu_link:link {
  text-decoration: none;
  color: #2b2b2b;
}

.main_nav .menu_link:visited {
  text-decoration: none;
  color: #2b2b2b;
}

.main_nav li {
  padding: 0 10px;
}

.main_nav .menu_item:not(.active_link) .menu_link:hover:after {
  position: absolute;
  content: '';
  top: 20px;
  left: 0;
  border-radius: 5px;
  width: 100%;
  height: 2px;
  background: #2b2b2b;
  -webkit-animation: menu_underline 0.7s;
          animation: menu_underline 0.7s;
}

.main_nav .active_link:hover:after {
  position: absolute;
  content: '';
  top: 0 !important;
  left: 0 !important;
  border-radius: 0 !important;
  width: 0 !important;
  height: 0 !important;
  background: none !important;
  -webkit-animation: none !important;
          animation: none !important;
}

.submenu {
  display: none;
  width: 180px;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  top: 25px;
  left: 9px;
}

.submenu a {
  width: auto;
  text-transform: uppercase;
  color: #2b2b2b;
  font-weight: 700;
  font-size: 15px;
  position: relative;
}

.submenu a:link {
  text-decoration: none;
  color: #2b2b2b;
}

.submenu a:visited {
  text-decoration: none;
  color: #2b2b2b;
}

.submenu .dropdown-menu_item {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  padding: 5px 3px;
}

.submenu .dropdown-menu_item:hover {
  background: rgba(255, 255, 255, 0.4);
}

.fa-angle-down,
.fa-angle-up {
  font-size: 20px;
  color: #000;
  padding: 0 0 0 5px;
}

.fa-angle-up {
  display: none;
}

.dropdown_element:hover .submenu {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.sticky {
  position: fixed;
  background: #fff;
  width: 100%;
  left: 0;
  top: 0;
  z-index: 100;
  -webkit-transition: 1s;
  transition: 1s;
}

.sticky_header_logo_box {
  position: absolute;
  padding: 0;
  top: 0;
  z-index: 999;
  width: 210px;
  height: 76px;
  background: #d84949;
}

.sticky_header_logo_box img {
  -webkit-transform: scale(0.7);
          transform: scale(0.7);
  margin: 1px 0 0 5px;
}

.sticky_header_logo_box h1 {
  font-size: 25px;
  margin: -6px 0 0 7px;
}

.sticky_header_logo_box h1 a {
  color: #fff;
}

.sticky_header_logo_box h1 a:link {
  text-decoration: none;
  color: #fff;
}

.sticky_header_logo_box h1 a:visited {
  text-decoration: none;
  color: #fff;
}

.sticky_header_logo_box h2 {
  font-size: 16px;
  margin: -2px 0px 1px 6px;
}

.sticky_header_logo_box h2 a {
  color: #fff;
}

.sticky_header_logo_box h2 a:link {
  text-decoration: none;
  color: #fff;
}

.sticky_header_logo_box h2 a:visited {
  text-decoration: none;
  color: #fff;
}

.menu_btn {
  display: none;
  cursor: pointer;
}

.bar1,
.bar2,
.bar3 {
  width: 35px;
  height: 5px;
  background-color: #333;
  margin: 6px 0;
  -webkit-transition: 0.4s;
  transition: 0.4s;
}

.change .bar1 {
  -webkit-transform: rotate(-45deg) translate(-9px, 6px);
  transform: rotate(-45deg) translate(-9px, 6px);
}

.change .bar2 {
  opacity: 0;
}

.change .bar3 {
  -webkit-transform: rotate(45deg) translate(-8px, -8px);
  transform: rotate(45deg) translate(-8px, -8px);
}

.active_link {
  color: #D84949 !important;
}

.arrows_box {
  right: 12px;
  top: 0;
  width: 90px;
}

.arrows_box .prev {
  cursor: pointer;
  display: inline-block;
  width: 40px;
  height: 40px;
  border: 2px solid #333333;
  background-color: #eeeeee;
  vertical-align: top;
  right: 0;
  -webkit-transition: 0.8s;
  transition: 0.8s;
}

.arrows_box .prev:hover {
  border: 2px solid #aaaaaa;
}

.arrows_box .next {
  cursor: pointer;
  display: inline-block;
  width: 40px;
  height: 40px;
  border: 2px solid #222222;
  background-color: #eeeeee;
  vertical-align: top;
  left: 0;
  -webkit-transition: 0.8s;
  transition: 0.8s;
}

.arrows_box .next:hover {
  border: 2px solid #aaaaaa;
}

.slick-active {
  outline: none !important;
}

.slide_wrapper {
  height: 200px;
  margin: 0 5px;
}

.prev i {
  -webkit-transition: 0.8s;
  transition: 0.8s;
  padding: 2px 0 0 12px;
  font-size: 30px;
}

.prev:hover i {
  color: #aaaaaa;
}

.next i {
  -webkit-transition: 0.8s;
  transition: 0.8s;
  padding: 2px 0 0 12px;
  font-size: 30px;
}

.next:hover i {
  color: #aaaaaa;
}

.main_section {
  padding: 50px 0;
}

.main_title {
  font-size: 36px;
  margin-bottom: 30px;
  font-weight: 700;
  text-transform: uppercase;
  color: #333333;
}

.short_description_wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  background: rgba(0, 0, 0, 0.3);
  border-radius: 5px;
  width: 100%;
  margin: 0 auto;
}

.short_description_wrapper h2 {
  color: #fff;
  font-size: 40px;
}

.short_description_box {
  width: 90%;
}

.main_index_img {
  height: 80vh;
  padding: 25px 10%;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  background: url("/img/dnipro.jpg") center center;
}

.btn_opearation {
  -ms-flex-pack: distribute;
      justify-content: space-around;
  width: 100%;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.btn_opearation a,
.btn_opearation button {
  color: #111111;
  padding: 20px 50px;
  font-weight: 700;
  background: #d84949;
  font-size: 25px;
  text-transform: uppercase;
  -webkit-transition: 0.8s;
  transition: 0.8s;
  outline: 0;
}

.btn_opearation a:hover,
.btn_opearation button:hover {
  color: #fff;
}

.quick_search_wrapper {
  -ms-flex-pack: distribute;
      justify-content: space-around;
}

.quick_search_wrapper .quick_search_select {
  cursor: pointer;
  border: 1px solid #dddddd;
  border-radius: 0;
}

.quick_search_wrapper .quick_search_select:focus {
  border-color: #dddddd;
  -webkit-box-shadow: 0 0 0 0.1rem rgba(221, 221, 221, 0.6);
          box-shadow: 0 0 0 0.1rem rgba(221, 221, 221, 0.6);
}

.quick_search_wrapper .quick_search_btn {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  background: #d84949 !important;
  border-color: #d84949;
}

.quick_search_wrapper .quick_search_btn:active {
  -webkit-box-shadow: 0 0 0 0.2rem rgba(216, 73, 73, 0.8) !important;
          box-shadow: 0 0 0 0.2rem rgba(216, 73, 73, 0.8) !important;
  border-color: #d84949 !important;
}

.quick_search_wrapper .quick_search_btn:focus {
  -webkit-box-shadow: 0 0 0 0.2rem rgba(216, 73, 73, 0.8) !important;
          box-shadow: 0 0 0 0.2rem rgba(216, 73, 73, 0.8) !important;
  border-color: #d84949 !important;
}

.input-group-text {
  color: #fff;
  border-radius: 0;
  background-color: #d84949;
  width: 43px;
}

.advantage_wrapper {
  background-color: #333333;
}

.advantage_wrapper .advantage_title {
  color: #ffffff;
  position: relative;
}

.advantage_wrapper .advantage_title:after {
  content: '';
  position: absolute;
  bottom: -20px;
  left: 100px;
  width: 100px;
  height: 1px;
  background-color: #444444;
}

.advantage_wrapper i {
  color: #d84949;
  font-size: 65px;
  margin-bottom: 40px;
}

.advantage_wrapper h4 {
  color: #ffffff;
  font-size: 25px;
  font-weight: 400;
  text-transform: uppercase;
  margin-bottom: 30px;
}

.advantage_wrapper p {
  color: #aaaaaa;
  font-size: 14px;
  font-weight: 400;
}

.slide_description {
  max-width: 50%;
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  padding: 20px 10px 20px 10px;
  background: #fff;
}

.slide_description a {
  -webkit-transition: 0.8s;
  transition: 0.8s;
  font-size: 18px;
  font-weight: 400;
  color: #333333;
}

.slide_description a:link {
  text-decoration: none;
  color: #333333;
}

.slide_description a:visited {
  text-decoration: none;
  color: #333333;
}

.slide_description a:hover {
  color: #d84949;
}

.slide_description a:hover:link {
  text-decoration: none;
  color: #d84949;
}

.slide_description a:hover:visited {
  text-decoration: none;
  color: #d84949;
}

.slide_description a:focus {
  outline: 0;
}

.slide_description p {
  color: #aaaaaa;
}

.property_id {
  right: 5px;
  bottom: 5px;
  color: #aaaaaa;
}

.slide_img_box {
  max-width: 50%;
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  background-color: #d7d7d7;
  overflow: hidden;
}

.slide_img_box .slide_img {
  position: absolute;
  height: auto;
  width: 140%;
  left: -20%;
}

.operation_type {
  top: 25px;
  left: 0;
  background: #d84949;
  padding: 13px 20px;
  font-size: 14px;
  font-weight: 700;
  text-transform: uppercase;
  color: #fff;
  z-index: 1;
}

.news_box,
.our_advantage_box {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  -ms-flex-preferred-size: 450px;
      flex-basis: 450px;
}

.list_box:first-child .list_advantage {
  display: none;
}

.news_box {
  margin-right: 15px;
}

.news_box .news_img {
  background: #898989;
  min-height: 50px;
}

.news_box .news_date {
  top: 0;
  left: 0;
  color: #fff;
  padding: 10px 10px;
  background-color: #d84949;
}

.news_box .news_date:link {
  text-decoration: none;
  color: #fff;
}

.news_box .news_date:visited {
  text-decoration: none;
  color: #fff;
}

.news_box .news_short_description {
  color: #aaaaaa;
  font-size: 14px;
  font-weight: 400;
}

.news_box .news_btn {
  border: 2px solid #333333;
  background-color: #ffffff;
}

.news_box a {
  color: #2b2b2b;
  font-size: 22px;
}

.news_box a:link {
  text-decoration: none;
  color: #2b2b2b;
}

.news_box a:visited {
  text-decoration: none;
  color: #2b2b2b;
}

.news_btn {
  color: #333333;
  padding: 10px 15px;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
}

.news_btn:link {
  text-decoration: none;
  color: #333333;
}

.news_btn:visited {
  text-decoration: none;
  color: #333333;
}

.list_box {
  border: 1px solid #333333;
  padding: 20px;
  margin-bottom: 15px;
}

.list_box .list_title {
  font-size: 18px;
  font-weight: 700;
  color: #333333;
}

.list_box .list_advantage {
  list-style-type: square;
  font-size: 16px;
  font-weight: 400;
  color: #aaaaaa;
}

.list_switcher {
  cursor: pointer;
  top: 5px;
  right: 5px;
}

.modal-open {
  overflow: auto !important;
}

footer {
  background-color: #111111;
}

footer .footer_title {
  color: #ffffff;
  font-size: 20px;
  font-weight: 700;
  text-transform: uppercase;
}

footer ul {
  margin-bottom: 5px;
}

footer ul i {
  color: #d84949;
  top: 2px;
  left: -20px;
}

footer ul li {
  padding: 0 0 0 20px;
  font-size: 16px;
  color: #aaaaaa;
}

footer ul a {
  color: #aaaaaa;
}

footer ul a:link {
  text-decoration: none;
  color: #aaaaaa;
}

footer ul a:visited {
  text-decoration: none;
  color: #aaaaaa;
}

footer .secondary_menu li {
  margin: 0;
  padding: 0;
}

footer .secondary_menu li:hover {
  text-decoration: underline;
}

footer .footer_btn_search {
  background: #d84949;
  padding: 7px 15px;
  color: #fff;
  border: none;
  outline: none;
  cursor: pointer;
}

footer .footer_line {
  height: 2px;
  background: #333333;
}

footer .copyright {
  font-size: 14px;
  font-weight: 400;
  color: #aaaaaa;
}

footer .copyright a {
  color: #d84949;
}

footer .copyright a:link {
  text-decoration: none;
  color: #d84949;
}

footer .copyright a:visited {
  text-decoration: none;
  color: #d84949;
}

footer .footer_search_box input {
  border-radius: 0;
}

.new_ad_sent {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  background: #d84949 !important;
  border-color: #d84949;
}

.new_ad_sent:active {
  -webkit-box-shadow: 0 0 0 0.2rem rgba(216, 73, 73, 0.8) !important;
          box-shadow: 0 0 0 0.2rem rgba(216, 73, 73, 0.8) !important;
  border-color: #d84949 !important;
}

.new_ad_sent:focus {
  -webkit-box-shadow: 0 0 0 0.2rem rgba(216, 73, 73, 0.8) !important;
          box-shadow: 0 0 0 0.2rem rgba(216, 73, 73, 0.8) !important;
  border-color: #d84949 !important;
}

.estate_container {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  height: 247px;
  margin-bottom: 30px;
}

.estate_container .estate_container_img {
  width: 370px;
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  overflow: hidden;
}

.estate_container .estate_container_img .estate_img_inner {
  display: none;
  position: absolute;
  height: 100%;
  bottom: 0;
  left: 0;
  width: 100%;
  background: rgba(0, 0, 0, 0.5);
  cursor: pointer;
  text-align: center;
  padding: 0;
}

.estate_container .estate_container_img .estate_img_inner .fa-eye {
  color: #aaaaaa;
  font-size: 30px;
  margin-top: 28%;
}

.estate_container .estate_container_img:hover .estate_img_inner {
  -webkit-animation: height_vertical 0.8s;
          animation: height_vertical 0.8s;
  display: block;
}

.estate_container .estate_container_img .estate_link {
  display: block;
  width: 100%;
  height: 247px;
  position: absolute;
  z-index: 1;
}

.estate_container .estate_container_img .estate_link:focus {
  outline: 0;
}

.estate_container .estate_container_description {
  padding: 22px 10px 45px 10px;
  width: 100%;
}

.estate_container .estate_container_description .estate_description_title {
  font-size: 18px;
  font-weight: 400;
  -webkit-transition: 0.8s;
  transition: 0.8s;
  color: #333333;
}

.estate_container .estate_container_description .estate_description_title:link {
  text-decoration: none;
  color: #333333;
}

.estate_container .estate_container_description .estate_description_title:visited {
  text-decoration: none;
  color: #333333;
}

.estate_container .estate_container_description .estate_description_title:hover {
  color: #d84949;
}

.estate_container .estate_container_description .estate_description_text {
  color: #aaaaaa;
  font-size: 14px;
  font-weight: 400;
}

.estate_container .estate_info {
  bottom: 0;
  left: 0;
  width: 100%;
  padding: 5px 15px;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.estate_container .estate_info .estate-separator-line {
  margin-bottom: 10px;
  height: 1px;
  background-color: #eeeeee;
}

.estate_container .estate_info .estate_icon {
  color: #666666;
  font-size: 14px;
  font-weight: 400;
}

.picture {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
}

.picture figure:first-child {
  width: 50%;
  -ms-flex-item-align: baseline;
      align-self: baseline;
  position: relative;
}

.picture figure {
  -ms-flex-item-align: baseline;
      align-self: baseline;
  margin: 3px;
  width: 20%;
}

.picture figure img {
  width: 100%;
  height: auto;
}

.sidebar_search {
  width: 100%;
  padding: 30px 10px;
}

.sidebar_search_title {
  color: #333333;
  margin-bottom: 10px;
  font-size: 19px;
  font-weight: 700;
  text-transform: uppercase;
}

.sidebar_search_select {
  font-size: 14px;
}

.sidebar_search_select:focus {
  outline: 0 !important;
  border-color: #dddddd;
  -webkit-box-shadow: 0 0 0 0.1rem rgba(221, 221, 221, 0.8);
          box-shadow: 0 0 0 0.1rem rgba(221, 221, 221, 0.8);
}

.sidebar_search_btn {
  width: 100%;
  background: #d84949;
  color: #fff;
  border-radius: 0 !important;
}

.container-checkbox {
  display: block;
  position: relative;
  padding-left: 55px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 16px;
  text-transform: lowercase;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */

.container-checkbox input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

/* Create a custom checkbox */

.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 30px;
  width: 41px;
  background-color: #eee;
}

/* On mouse-over, add a grey background color */

.container-checkbox:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */

.container-checkbox input:checked ~ .checkmark {
  background-color: #d84949;
}

/* Create the checkmark/indicator (hidden when not checked) */

.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */

.container-checkbox input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */

.container-checkbox .checkmark:after {
  left: 9px;
  top: 1px;
  width: 10px;
  height: 18px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  transform: rotate(45deg);
}

.detail_property_description {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  margin-top: 20px;
}

.detail_property_small {
  width: 25%;
}

.detail_property_list {
  margin-top: 10px;
  font-size: 14px;
  padding: 22px 12px 22px 19px;
  border: 1px solid #333333;
}

.estate-separator-line {
  height: 2px;
  background: #aaaaaa;
}

.detail_property_description_box {
  width: 70%;
}

.search_back_link {
  display: block;
  width: 100%;
  color: #fff;
  padding: 10px;
  background-color: #d84949;
}

.search_back_link:link {
  text-decoration: none;
  color: #fff;
}

.search_back_link:visited {
  text-decoration: none;
  color: #fff;
}

.detail_img_box {
  overflow: hidden;
}

.detail_single_img {
  height: 550px;
  overflow: hidden;
}

.admin_list {
  margin-top: 25px;
}

.admin_sidebar {
  min-height: 100vh;
  background-color: #2b2b2b;
}

.admin_submenu {
  padding: 0;
  margin: 0 0 0 -27px !important;
  display: none;
}

.admin_submenu .admin_submenu_link {
  color: #fff;
}

.admin_submenu .admin_submenu_link:link {
  text-decoration: none;
  color: #fff;
}

.admin_submenu .admin_submenu_link:visited {
  text-decoration: none;
  color: #fff;
}

.admin_submenu_element {
  -webkit-transition: 0.7s;
  transition: 0.7s;
  padding: 8px 0 8px 30px;
}

.admin_submenu_element:hover {
  background-color: #8e8e8e;
}

.show {
  display: block !important;
}

.admin_list_element {
  margin: 8px 0;
  text-align: left;
  padding: 8px 0 8px 30px;
  -webkit-transition: 0.7s;
  transition: 0.7s;
}

.admin_list_link {
  position: relative;
  padding: 7px 10px;
  color: #fff;
  -webkit-transition: 0.7s;
  transition: 0.7s;
}

.admin_list_link:link {
  text-decoration: none;
  color: #fff;
}

.admin_list_link:visited {
  text-decoration: none;
  color: #fff;
}

.admin_list_link i {
  position: absolute;
  top: 7px;
  left: -13px;
}

.current {
  color: #d84949;
  font-weight: 700;
}

.current:link {
  text-decoration: none;
  color: #d84949;
}

.current:visited {
  text-decoration: none;
  color: #d84949;
}

.admin_user_box {
  width: 100%;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.admin_user_box .user_photo_box {
  margin-top: 30px;
  background-color: #fff;
  width: 150px;
  height: 150px;
  border-radius: 50%;
  overflow: hidden;
  position: relative;
}

.admin_exit_link {
  color: #d84949;
}

.admin_exit_link:link {
  text-decoration: none;
  color: #d84949;
}

.admin_exit_link:visited {
  text-decoration: none;
  color: #d84949;
}

.admin_exit_link:hover {
  color: #fff !important;
}

.admin_username {
  color: #fff;
}

.admin_content_box {
  padding: 15px 20px;
}

.admin_user_phone {
  width: 95% !important;
}

.add_new_phone_btn,
remove_phone_btn {
  padding: 10px 16px;
}

.add_new_phone_btn,
.new_users_phone {
  margin-bottom: 10px;
}

.remove_phone_btn {
  position: absolute;
  left: -55px;
  top: 0;
  padding: 10px 16px;
}

.admin_user_photo {
  position: absolute;
  width: 100%;
  height: auto;
}

.detele_tbn_box {
  margin: -53px 0 0 -125px;
}

.edit_btn_box input {
  position: relative;
  z-index: 15;
  margin-right: 154px;
}

.img_responsive {
  width: 100%;
  height: auto;
}

.custom_field_add_btn {
  right: -33px;
  top: 5px;
}

#modalOperation .modal-dialog,
#modalType .modal-dialog,
#modalPlace .modal-dialog {
  max-width: 50%;
}

.img_object_preload {
  position: relative;
}

.checkbox_container {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */

.checkbox_container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

/* Create a custom checkbox */

.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #ccc;
}

/* On mouse-over, add a grey background color */

.checkbox_container:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */

.checkbox_container input:checked ~ .checkmark {
  background-color: #2196F3;
}

/* Create the checkmark/indicator (hidden when not checked) */

.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */

.checkbox_container input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */

.checkbox_container .checkmark:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  transform: rotate(45deg);
}

.pulsar {
  -webkit-animation: pulsar 1s infinite;
          animation: pulsar 1s infinite;
}

.admin_setting_input {
  width: 410px !important;
}

.signin_btn {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  background: #d84949 !important;
  border-color: #d84949;
}

.signin_btn:focus {
  -webkit-box-shadow: 0 0 0 0.2rem rgba(216, 73, 73, 0.8) !important;
          box-shadow: 0 0 0 0.2rem rgba(216, 73, 73, 0.8) !important;
  border-color: #d84949 !important;
}

.signin_btn:hover {
  border-color: transparent;
}

.news_article_box .news_title {
  color: #2b2b2b;
  font-size: 25px;
}

.news_article_box .news_title:link {
  text-decoration: none;
  color: #2b2b2b;
}

.news_article_box .news_title:visited {
  text-decoration: none;
  color: #2b2b2b;
}

.news_article_box .news_date {
  color: #aaaaaa;
}

.news_article_box .news_detail {
  color: #d84949;
}

.news_article_box .news_detail:link {
  text-decoration: none;
  color: #d84949;
}

.news_article_box .news_detail:visited {
  text-decoration: none;
  color: #d84949;
}

.objects-pagination {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  width: 100%;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.success_message {
  display: none;
}

.custom_textarea {
  overflow: hidden;
}

.required_field {
  color: #d84949;
}

.breadcrumb {
  margin: 0 !important;
}

.breadcrumb-item a {
  color: #aaaaaa;
}

.breadcrumb-item.active {
  color: #d84949 !important;
}

.pagination * {
  color: #2b2b2b;
}

.pagination .page-item.active .page-link {
  z-index: 1;
  color: #2b2b2b;
  background-color: #d84949;
  border-color: #d84949;
}

.pagination .page-link:focus,
.pagination .page-link:hover {
  color: #2b2b2b;
  text-decoration: none;
  background-color: #e9ecef;
  border-color: #dee2e6;
}

body {
  font-family: 'Roboto', sans-serif;
  background-color: #eeeeee;
  padding: 0 !important;
}

header {
  margin: 0 !important;
  padding: 0 !important;
}

.row.no_mg {
  margin: 0;
}

[class^="col-"].no_pd {
  padding-right: 0;
  padding-left: 0;
}

.container-fluid.no_pd {
  padding-right: 0;
  padding-left: 0;
}

.container.no_pd {
  padding-right: 0;
  padding-left: 0;
}

.text_bold {
  font-weight: 700;
}

.display_flex {
  display: -webkit-box !important;
  display: -ms-flexbox !important;
  display: flex !important;
}

.w_50 {
  width: 50px !important;
}

.fs_22 {
  font-size: 22px;
}

.phone_number {
  color: #2b2b2b;
}

.phone_number:link {
  text-decoration: none;
  color: #2b2b2b;
}

.phone_number:visited {
  text-decoration: none;
  color: #2b2b2b;
}

@media screen and (max-width: 992px) {
  .header_logo_box {
    left: 0;
    height: 101px;
  }

  .header_logo_box img {
    margin: 9px 0 0 20px;
  }

  .short_description_wrapper h2 {
    font-size: 22px;
  }

  .header_logo_box .real_estate_name {
    font-size: 30px;
  }

  .header_logo_box h1 {
    color: #fff;
    margin: -10px 0 0 8px;
  }

  .header_logo_box h2 {
    margin: -17px 0 0 9px;
  }

  .header_logo_box .real_estate {
    font-size: 15px;
  }

  .main_index_img div:first-child {
    width: 90% !important;
  }

  .btn_opearation {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }

  .btn_opearation a {
    margin-bottom: 15px;
  }

  .short_description_wrapper {
    height: 90% !important;
  }

  .btn_opearation a,
  .btn_opearation button {
    padding: 15px 40px;
  }

  footer .footer_btn_search {
    padding: 7px 5px;
  }

  .detail_property_description {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }

  .detail_property_description_box {
    width: 100%;
    -webkit-box-ordinal-group: 0;
        -ms-flex-order: -1;
            order: -1;
  }

  .detail_property_list {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: distribute;
        justify-content: space-around;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-direction: row;
            flex-direction: row;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
  }

  .detail_property_list li {
    margin: 0 10px;
  }

  .detail_property_small {
    width: 100%;
  }

  .main_nav {
    display: none;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-flow: column;
            flex-flow: column;
    -ms-flex-pack: distribute;
        justify-content: space-around;
    position: absolute;
    top: 57px;
    height: 80vh;
    background: #000;
    width: 100%;
  }

  .main_nav .menu_link {
    color: #fff;
  }

  .main_nav .menu_link:link {
    text-decoration: none;
    color: #fff;
  }

  .main_nav .menu_link:visited {
    text-decoration: none;
    color: #fff;
  }

  .menu_btn {
    display: inline-block;
    margin: 7px 14px 11px 0;
  }

  .menu_box {
    max-width: 100%;
  }
}

@media screen and (max-width: 767px) {
  .btn_opearation {
    width: auto;
  }

  .btn_opearation a,
  .btn_opearation button {
    font-size: 20px;
    padding: 10px 25px;
  }

  .sticky_header_logo_box img {
    -webkit-transform: scale(0.6);
            transform: scale(0.6);
    margin: -2px 0 0 5px;
  }

  .sticky_header_logo_box h1 {
    font-size: 20px;
    margin: -9px 0 0 7px;
  }

  .sticky_header_logo_box {
    height: 57px;
  }

  .sticky_header_logo_box h2 {
    font-size: 15px;
    margin: -5px 0px 1px 6px;
  }

  .top_menu_wrapper .container {
    max-width: 100%;
    margin: 0;
  }

  .main_title {
    font-size: 27px;
  }

  .arrows_box {
    right: 0;
    top: -7px;
  }

  .extra_index_wrapper {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }

  .our_advantage_box {
    -webkit-box-ordinal-group: 0;
        -ms-flex-order: -1;
            order: -1;
  }

  .footer_search_box .input-group {
    width: 100%;
  }

  footer ul li {
    padding: 0;
  }

  .advantage_wrapper .advantage_title:after {
    left: 62px;
  }

  .estate_container {
    height: auto;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }

  .estate_container .estate_container_img {
    width: 100%;
    height: 400px;
  }

  .estate_container .estate_container_img .estate_link {
    height: 400px;
  }

  .slide_img_box,
  .slide_description {
    max-width: 100%;
  }

  .dropdown_element {
    text-align: center;
  }

  .dropdown_element i {
    color: #fff;
  }

  .dropdown_element .submenu {
    display: block;
    position: relative !important;
  }

  .dropdown_element .submenu a {
    color: #fff;
    opacity: 0.4;
  }
}

@media screen and (max-width: 575px) {
  .main_index_img div:first-child {
    width: 95% !important;
  }

  .short_description_wrapper h2 font-siz
.main_section {
    padding: 30px 0;
  }

  .main_title {
    padding: 0;
    font-size: 21px;
  }

  .header_logo_box {
    width: 215px;
  }

  .news_box {
    margin-right: 0;
  }

  .btn_opearation a,
  .btn_opearation button {
    padding: 20px 40px;
    font-size: 20px;
  }

  .slider_wrapper {
    padding: 0 10px;
  }

  .extra_index_wrapper {
    padding: 0 10px;
  }

  .footer_wrapper {
    margin: 10px 30px !important;
  }

  footer .copyright {
    width: 100%;
  }

  .copyright_wrapper {
    text-align: center;
  }

  .slider_box {
    margin-top: 60px;
  }

  .arrows_box {
    right: 40%;
    top: 38px;
  }

  .main_section {
    padding: 25px 0;
  }

  .advantage_wrapper .advantage_title:after {
    left: 74px;
  }

  .news_box,
  .our_advantage_box {
    -webkit-box-flex: 1;
        -ms-flex-positive: 1;
            flex-grow: 1;
    -ms-flex-preferred-size: auto;
        flex-basis: auto;
  }

  .news_article_box {
    padding: 0 10px;
  }

  .news_article_box .news_title {
    font-size: 19px;
  }
}

@media screen and (max-width: 420px) {
  .header_logo_box {
    width: 196px;
  }

  .slide_wrapper {
    height: auto;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }

  .slide_wrapper div {
    max-width: 100%;
  }

  .slide_wrapper .slide_img_box {
    height: 250px;
  }

  .btn_opearation a,
  .btn_opearation button {
    padding: 10px 15px;
    font-size: 18px;
  }

  .social_wrapper {
    padding: 0;
  }

  .arrows_box {
    right: 35%;
  }

  .advantage_wrapper h4 {
    font-size: 18px;
    margin-bottom: 12px;
  }

  .advantage_title {
    margin-bottom: 25px !important;
  }
}

@media screen and (max-height: 410px) {
  .btn_opearation a,
  .btn_opearation button {
    padding: 10px 20px;
    font-size: 15px;
  }

  .main_index_img {
    height: 90vh;
    padding: 5px 0;
  }
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/